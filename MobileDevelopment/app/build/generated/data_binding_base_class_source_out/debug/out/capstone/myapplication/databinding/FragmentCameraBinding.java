// Generated by view binder compiler. Do not edit!
package capstone.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import capstone.myapplication.R;
import com.airbnb.lottie.LottieAnimationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCameraBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LottieAnimationView animPlant;

  @NonNull
  public final Button btAnalyze;

  @NonNull
  public final Button btCamera;

  @NonNull
  public final Button btGallery;

  @NonNull
  public final ImageView previewPlant;

  private FragmentCameraBinding(@NonNull ConstraintLayout rootView,
      @NonNull LottieAnimationView animPlant, @NonNull Button btAnalyze, @NonNull Button btCamera,
      @NonNull Button btGallery, @NonNull ImageView previewPlant) {
    this.rootView = rootView;
    this.animPlant = animPlant;
    this.btAnalyze = btAnalyze;
    this.btCamera = btCamera;
    this.btGallery = btGallery;
    this.previewPlant = previewPlant;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anim_plant;
      LottieAnimationView animPlant = rootView.findViewById(id);
      if (animPlant == null) {
        break missingId;
      }

      id = R.id.bt_analyze;
      Button btAnalyze = rootView.findViewById(id);
      if (btAnalyze == null) {
        break missingId;
      }

      id = R.id.bt_camera;
      Button btCamera = rootView.findViewById(id);
      if (btCamera == null) {
        break missingId;
      }

      id = R.id.bt_gallery;
      Button btGallery = rootView.findViewById(id);
      if (btGallery == null) {
        break missingId;
      }

      id = R.id.preview_plant;
      ImageView previewPlant = rootView.findViewById(id);
      if (previewPlant == null) {
        break missingId;
      }

      return new FragmentCameraBinding((ConstraintLayout) rootView, animPlant, btAnalyze, btCamera,
          btGallery, previewPlant);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
